// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
function initTelegramWebApp() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ Telegram
    if (window.Telegram && window.Telegram.WebApp) {
        console.log("‚úÖ Telegram WebApp SDK –∑–∞–≥—Ä—É–∂–µ–Ω");
        return window.Telegram.WebApp;
    }
    
    // –ï—Å–ª–∏ –Ω–µ –≤ Telegram, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    console.log("‚ö†Ô∏è  –ù–µ –≤ Telegram, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É");
    
    window.Telegram = {
        WebApp: {
            initDataUnsafe: {
                user: {
                    id: 123456789,
                    first_name: "Test",
                    last_name: "User", 
                    username: "testuser",
                    language_code: "ru"
                }
            },
            sendData: function(data) {
                console.log("üì§ SendData (–∑–∞–≥–ª—É—à–∫–∞):", data);
                // –î–ª—è —Ç–µ—Å—Ç–∞ - –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
                return true;
            },
            expand: function() {
                console.log("üì± Expand (–∑–∞–≥–ª—É—à–∫–∞)");
            },
            showPopup: function(params) {
                console.log("üìù ShowPopup (–∑–∞–≥–ª—É—à–∫–∞):", params);
                alert(params.title + ": " + params.message);
            },
            close: function() {
                console.log("‚ùå Close (–∑–∞–≥–ª—É—à–∫–∞)");
            },
            MainButton: {
                setText: function(text) {
                    console.log("üîò MainButton.setText:", text);
                },
                setParams: function(params) {
                    console.log("üîò MainButton.setParams:", params);
                },
                show: function() {
                    console.log("üîò MainButton.show");
                },
                hide: function() {
                    console.log("üîò MainButton.hide");
                },
                onClick: function(callback) {
                    console.log("üîò MainButton.onClick");
                }
            },
            version: "7.8",
            platform: "web"
        }
    };
    
    return window.Telegram.WebApp;
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const tg = initTelegramWebApp();
let isTelegram = false;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
    console.log("üü¢ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤ Telegram –ª–∏ –º—ã
    isTelegram = !!(window.Telegram && window.Telegram.WebApp);
    
    if (isTelegram) {
        // –ù–∞—Å—Ç–æ—è—â–∏–π Telegram WebApp
        tg.expand();
        document.getElementById('status').textContent = "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ Telegram";
        showUserInfo();
    } else {
        // –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        document.getElementById('status').textContent = "‚ö†Ô∏è –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–Ω–µ –≤ Telegram)";
        showUserInfo();
    }
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function showUserInfo() {
    const user = tg.initDataUnsafe.user;
    const userInfoDiv = document.getElementById('user-info');
    
    if (user) {
        userInfoDiv.innerHTML = `
            <p><strong>üë§ –ò–º—è:</strong> ${user.first_name} ${user.last_name || ''}</p>
            <p><strong>üÜî ID:</strong> ${user.id}</p>
            <p><strong>üìß Username:</strong> @${user.username || '—Å–∫—Ä—ã—Ç'}</p>
            <p><strong>üåê –Ø–∑—ã–∫:</strong> ${user.language_code || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</p>
            <p><strong>üîó –í Telegram:</strong> ${isTelegram ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}</p>
        `;
    } else {
        userInfoDiv.innerHTML = '<p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</p>';
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å Telegram ID
function showTelegramId() {
    const user = tg.initDataUnsafe.user;
    
    if (user) {
        showResult(`‚úÖ –í–∞—à Telegram ID: ${user.id}`);
        tg.showPopup({
            title: "–í–∞—à ID",
            message: `–í–∞—à Telegram ID: ${user.id}`
        });
    } else {
        showResult("‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞");
    }
}

// –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
function sendTestMessage() {
    const user = tg.initDataUnsafe.user;
    
    if (!user) {
        showResult("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω");
        return;
    }

    showResult("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...");
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–∞
    const success = tg.sendData(JSON.stringify({
        action: "test_message",
        user_id: user.id,
        message: "–ü—Ä–∏–≤–µ—Ç –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!",
        timestamp: new Date().toISOString()
    }));
    
    if (success) {
        showResult("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!");
        tg.showPopup({
            title: "–£—Å–ø–µ—Ö!",
            message: "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –±–æ—Ç–∞"
        });
    } else {
        showResult("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è");
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
function showResult(message) {
    document.getElementById('result').textContent = message;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', initApp);
