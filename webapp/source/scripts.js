// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—ä–µ–∫—Ç Telegram Web App
const tg = window.Telegram.WebApp;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initApp() {
    console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp...');
    console.log('Telegram object:', window.Telegram);
    console.log('WebApp object:', tg);
    
    if (!tg || !tg.sendData) {
        console.error('Telegram WebApp –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω!');
        showResult('‚ùå WebApp –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return;
    }
    
    // –†–∞—Å—à–∏—Ä—è–µ–º –Ω–∞ –≤—Å—ë –æ–∫–Ω–æ
    tg.expand();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    showUserInfo();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
    tg.MainButton.setText("‚úÖ –ì–æ—Ç–æ–≤–æ");
    tg.MainButton.setParams({
        color: "#06811bff"
    });
    tg.MainButton.show();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–Ω–æ–ø–∫–µ
    tg.MainButton.onClick(() => {
        sendDataToBot('main_button_click');
    });
    
    console.log('WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log('Init Data:', tg.initData);
    console.log('Platform:', tg.platform);
}

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
function showUserInfo() {
    const user = tg.initDataUnsafe.user;
    const userInfoDiv = document.getElementById('user-info');
    
    if (user) {
        userInfoDiv.innerHTML = `
            <p><strong>üë§ –ò–º—è:</strong> ${user.first_name} ${user.last_name || ''}</p>
            <p><strong>üÜî ID:</strong> ${user.id}</p>
            <p><strong>üìß Username:</strong> @${user.username || '—Å–∫—Ä—ã—Ç'}</p>
        `;
    } else {
        userInfoDiv.innerHTML = '<p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</p>';
    }
}

// –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–∞
function sendDataToBot(action, data = {}) {
    try {
        console.log('–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è:', action);
        
        const payload = {
            action: action,
            data: data,
            user_id: tg.initDataUnsafe.user?.id,
            timestamp: new Date().toISOString(),
            source: 'webapp'
        };
        
        const message = JSON.stringify(payload);
        console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ:', message);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–µ—Ç–æ–¥–∞
        if (typeof tg.sendData === 'function') {
            tg.sendData(message);
            console.log('–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ sendData()');
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É
            setTimeout(() => {
                if (typeof tg.close === 'function') {
                    tg.close();
                }
            }, 1000);
            
            showResult(`‚úÖ "${action}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!`);
        } else {
            console.error('–ú–µ—Ç–æ–¥ sendData –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
            showResult('‚ùå –û—à–∏–±–∫–∞: sendData –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω');
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', error);
        showResult('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
function showResult(message) {
    const resultDiv = document.getElementById('result');
    resultDiv.textContent = message;
    resultDiv.style.display = 'block';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const btnGame = document.getElementById("btnGame");
    const btnRandom = document.getElementById("btnRandom");
    const btnProducts = document.getElementById("btnProducts");
    
    if (btnGame) {
        btnGame.addEventListener('click', () => {
            console.log('–ö–ª–∏–∫ –ø–æ btnGame');
            sendDataToBot('game_start', { level: 'beginner' });
        });
    }
    
    if (btnRandom) {
        btnRandom.addEventListener('click', () => {
            const randomNum = Math.floor(Math.random() * 100) + 1;
            console.log('–ö–ª–∏–∫ –ø–æ btnRandom, —á–∏—Å–ª–æ:', randomNum);
            sendDataToBot('random_number', { value: randomNum });
        });
    }
    
    if (btnProducts) {
        btnProducts.addEventListener('click', () => {
            console.log('–ö–ª–∏–∫ –ø–æ btnProducts');
            sendDataToBot('show_products', { category: 'all' });
        });
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    setTimeout(initApp, 100);
});
